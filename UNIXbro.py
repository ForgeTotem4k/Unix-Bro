import subprocess
import re
from mistralai.client import MistralClient
from colorama import Fore, Back, Style, init

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Colorama (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ü–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞)
init(autoreset=True)

client = MistralClient(api_key="tQuGZnnnDS5h9xjuW6yjbNIbWpthUK1W")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–ª—é—á

def generate_command(user_request: str) -> str:
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ UNIX-–∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ Mistral."""
    response = client.chat(
        model="mistral-small",
        messages=[{
            "role": "user",
            "content": f"""
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç: '{user_request}'. 
            –î–∞–π –¢–û–õ–¨–ö–û –æ–¥–Ω—É UNIX-–∫–æ–º–∞–Ω–¥—É:
            - –ë–µ–∑ –ª—é–±—ã—Ö `, –∫–∞–≤—ã—á–µ–∫, –ø–æ—è—Å–Ω–µ–Ω–∏–π, —á–∏—Å—Ç–µ–π—à–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞. –ª—é–±–æ–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–µ - —Å—á–∏—Ç–∞–µ—Ç—å—Å—è –æ—à–∏–±–∫–æ–π
            - –ü—Ä–∏–º–µ—Ä—ã:
              –ó–∞–ø—Ä–æ—Å: "–ø–æ–∫–∞–∂–∏ —Ñ–∞–π–ª—ã" ‚Üí ls -l
              –ó–∞–ø—Ä–æ—Å: "–ø—Ä–æ–≤–µ—Ä—å —é—Ç—É–±" ‚Üí ping youtube.com
            """
        }]
    )
    return response.choices[0].message.content.strip()

def execute_command(cmd: str) -> str:
    try:
        result = subprocess.run(
            cmd, 
            shell=True, 
            text=True, 
            capture_output=True,
            timeout=10,
            executable="/bin/bash"
        )
        # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        output = result.stdout or result.stderr or f"{Fore.GREEN}‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        return output
    except Exception as e:
        # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ—à–∏–±–æ–∫
        return f"{Fore.RED}‚ùå –û—à–∏–±–∫–∞: {e}"

def main():
    # –Ø—Ä–∫–æ–µ —Ü–≤–µ—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    print(f"{Back.BLUE}{Fore.WHITE}üîÆ UNIX-Bro by forge {Style.RESET_ALL}")
    print(f"{Fore.CYAN}–ü–∏—à–∏—Ç–µ —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å ({Fore.YELLOW}exit{Fore.CYAN} ‚Äî –≤—ã—Ö–æ–¥){Style.RESET_ALL}")
    
    while True:
        user_input = input(f"\n{Fore.MAGENTA}‚ûú {Style.RESET_ALL}").strip()
        if user_input.lower() == "exit":
            print(f"{Fore.YELLOW}üö™ –í—ã—Ö–æ–¥ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞...{Style.RESET_ALL}")
            break
        
        command = generate_command(user_input)
        # –ñ–µ–ª—Ç—ã–π —Ü–≤–µ—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫–æ–º–∞–Ω–¥—ã
        print(f"\n{Fore.YELLOW}‚å®  –ö–æ–º–∞–Ω–¥–∞: {Fore.CYAN}{command}{Style.RESET_ALL}")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å —Ü–≤–µ—Ç–æ–≤—ã–º –∞–∫—Ü–µ–Ω—Ç–æ–º
        confirm = input(f"{Fore.WHITE}–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É? {Style.DIM}({Fore.GREEN}y{Style.RESET_ALL}{Style.DIM}/{Fore.RED}N{Style.RESET_ALL}{Style.DIM}){Style.RESET_ALL}: ").lower()
        if confirm == "y":
            result = execute_command(command)
            print(result)  # –†–µ–∑—É–ª—å—Ç–∞—Ç —É–∂–µ —Ü–≤–µ—Ç–Ω–æ–π
        else:
            print(f"{Fore.RED}‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ{Style.RESET_ALL}")

if __name__ == "__main__":
    main()
