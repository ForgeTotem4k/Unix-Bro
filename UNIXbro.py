import subprocess
import re
from mistralai.client import MistralClient
from colorama import Fore, Back, Style, init

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Colorama (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ü–≤–µ—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞)
init(autoreset=True)

client = MistralClient(api_key="your_api_key")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –∫–ª—é—á

def generate_commands(user_request: str) -> list:
    #–ü—Ä–æ–º—Ç –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    response = client.chat(
        model="mistral-small",
        messages=[{
            "role": "user",
            "content": f"""
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç: '{user_request}'. 
            –î–∞–π —Å–ø–∏—Å–æ–∫ UNIX-–∫–æ–º–∞–Ω–¥ (–æ–¥–Ω—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ):
            - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –°–ê–ú –∑–Ω–∞–µ—Ç —á—Ç–æ –∑–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ—ç—Ç–æ–º—É –Ω–∏–∫–∞–∫–∏—Ö –ø–æ—è—Å–Ω–µ–Ω–∏–π. –ø–æ—è—Å–Ω–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥–µ = –æ—à–∏–±–∫–∞, –∏ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã.
            - –ö–∞–∂–¥–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
            - –ë–µ–∑ –ª—é–±—ã—Ö `, –∫–∞–≤—ã—á–µ–∫, –ø–æ—è—Å–Ω–µ–Ω–∏–π, —á–∏—Å—Ç–µ–π—à–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
            - –ü—Ä–∏–º–µ—Ä—ã:
              –ó–∞–ø—Ä–æ—Å: "–ø–æ–∫–∞–∂–∏ —Ñ–∞–π–ª—ã –∏ –ø—Ä–æ–≤–µ—Ä—å —é—Ç—É–±" ‚Üí 
                ls -l
                ping youtube.com
              –ó–∞–ø—Ä–æ—Å: "—Å–æ–∑–¥–∞–π –ø–∞–ø–∫—É –∏ –ø–µ—Ä–µ–π–¥–∏ –≤ –Ω–µ–µ" ‚Üí 
                mkdir new_folder
                cd new_folder
            """
        }]
    )
    # –†–∞–∑–±–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã, —É–¥–∞–ª—è—è –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    commands = [cmd.strip() for cmd in response.choices[0].message.content.split('\n') if cmd.strip()]
    return commands

def execute_command(cmd: str) -> str:
    try:
        result = subprocess.run(
            cmd, 
            shell=True, 
            text=True, 
            capture_output=True,
            timeout=10,
            executable="/bin/bash"
        )
        # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        output = result.stdout or result.stderr or f"{Fore.GREEN}‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        return output
    except Exception as e:
        # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –æ—à–∏–±–æ–∫
        return f"{Fore.RED}‚ùå –û—à–∏–±–∫–∞: {e}"

def main():
    # –Ø—Ä–∫–æ–µ —Ü–≤–µ—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    print(f"{Back.BLUE}{Fore.WHITE}üîÆ UNIX-Bro by forge {Style.RESET_ALL}")
    print(f"{Fore.CYAN}–ü–∏—à–∏—Ç–µ —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å ({Fore.YELLOW}exit{Fore.CYAN} ‚Äî –≤—ã—Ö–æ–¥){Style.RESET_ALL}")
    
    while True:
        user_input = input(f"\n{Fore.MAGENTA}‚ûú {Style.RESET_ALL}").strip()
        if user_input.lower() == "exit":
            print(f"{Fore.YELLOW}üö™ –í—ã—Ö–æ–¥ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞...{Style.RESET_ALL}")
            break
        
        commands = generate_commands(user_input)
        
        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π
        print(f"\n{Fore.YELLOW}‚å®  –ù–∞–π–¥–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã:{Style.RESET_ALL}")
        for i, cmd in enumerate(commands, 1):
            print(f"{Fore.CYAN}{i}. {cmd}{Style.RESET_ALL}")
        
        # –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        print(f"\n{Fore.WHITE}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:{Style.RESET_ALL}")
        print(f"{Style.DIM}({Fore.GREEN}a{Style.RESET_ALL}{Style.DIM}) –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ{Style.RESET_ALL}")
        print(f"{Style.DIM}({Fore.GREEN}1-{len(commands)}{Style.RESET_ALL}{Style.DIM}) –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é{Style.RESET_ALL}")
        print(f"{Style.DIM}({Fore.RED}n{Style.RESET_ALL}{Style.DIM}) –û—Ç–º–µ–Ω–∏—Ç—å{Style.RESET_ALL}")
        
        choice = input(f"{Fore.MAGENTA}‚ûú {Style.RESET_ALL}").lower()
        
        if choice == 'a':
            # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
            for cmd in commands:
                print(f"\n{Fore.YELLOW}‚å®  –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {Fore.CYAN}{cmd}{Style.RESET_ALL}")
                result = execute_command(cmd)
                print(result)
        elif choice.isdigit() and 1 <= int(choice) <= len(commands):
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É
            cmd = commands[int(choice)-1]
            print(f"\n{Fore.YELLOW}‚å®  –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {Fore.CYAN}{cmd}{Style.RESET_ALL}")
            result = execute_command(cmd)
            print(result)
        else:
            print(f"{Fore.RED}‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ{Style.RESET_ALL}")

if __name__ == "__main__":
    main()
